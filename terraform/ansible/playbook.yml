---
- name: Deploy Flask Application with Docker
  hosts: all
  become: yes
  
  vars:
    app_dir: /home/ubuntu/hello-flask
    app_user: ubuntu
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
    
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - git
        state: present
    
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes
    
    - name: Add user to docker group
      user:
        name: "{{ app_user }}"
        groups: docker
        append: yes

    - name: Reset ssh connection to allow user changes
      meta: reset_connection
    
    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes
    
    - name: Clone Flask repository
      git:
        repo: "https://{{ github_token }}@github.com/Coletinn/hello-flask.git"
        dest: "{{ app_dir }}"
        version: main
        force: yes
      become_user: "{{ app_user }}"
    
    - name: Stop existing containers
      command: docker compose down
      args:
        chdir: "{{ app_dir }}"
      become_user: "{{ app_user }}"
      ignore_errors: yes
    
    - name: Build and start containers
      command: docker compose up -d --build
      args:
        chdir: "{{ app_dir }}"
      become_user: "{{ app_user }}"
    
    - name: Wait for application to be ready
      uri:
        url: http://localhost:5000
        status_code: 200
      register: result
      until: result.status == 200
      retries: 5
      delay: 5
    
    - name: Show running containers
      command: docker compose ps
      args:
        chdir: "{{ app_dir }}"
      become_user: "{{ app_user }}"
      register: containers
    
    - name: Display container status
      debug:
        var: containers.stdout_lines